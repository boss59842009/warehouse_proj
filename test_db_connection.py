#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö PostgreSQL.
"""
import os
import sys
import psycopg2
from psycopg2 import OperationalError

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
DB_NAME = "sklad_db"
DB_USER = "postgres"
DB_PASSWORD = "postgress"
DB_HOST = "localhost"
DB_PORT = "5432"

def test_connection():
    """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö PostgreSQL."""
    connection = None
    try:
        # –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
        connection = psycopg2.connect(
            dbname=DB_NAME,
            user=DB_USER,
            password=DB_PASSWORD,
            host=DB_HOST,
            port=DB_PORT
        )
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
        cursor = connection.cursor()
        cursor.execute("SELECT version();")
        db_version = cursor.fetchone()
        
        print("üü¢ –£—Å–ø—ñ—à–Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ PostgreSQL!")
        print(f"Version: {db_version[0]}")
        return True
    
    except OperationalError as error:
        print("üî¥ –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ PostgreSQL!")
        print(f"–ü–æ–º–∏–ª–∫–∞: {error}")
        print("–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ, —á–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ PostgreSQL —Ç–∞ —á–∏ –∑–∞–ø—É—â–µ–Ω–æ —Å–µ—Ä–≤–µ—Ä.")
        print("–¶—è –ø—Ä–æ–≥—Ä–∞–º–∞ –ø—Ä–∞—Ü—é—î –¢–Ü–õ–¨–ö–ò –∑ PostgreSQL!")
        return False
    
    finally:
        # –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
        if connection:
            connection.close()

def create_database():
    """–°–ø—Ä–æ–±–∞ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –±–∞–∑—É –¥–∞–Ω–∏—Ö, —è–∫—â–æ –≤–æ–Ω–∞ –Ω–µ —ñ—Å–Ω—É—î."""
    try:
        # –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —Å–µ—Ä–≤–µ—Ä–∞ PostgreSQL –±–µ–∑ –≤–∫–∞–∑–∞–Ω–Ω—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
        connection = psycopg2.connect(
            dbname="postgres",
            user=DB_USER,
            password=DB_PASSWORD,
            host=DB_HOST,
            port=DB_PORT
        )
        connection.autocommit = True
        cursor = connection.cursor()
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
        cursor.execute(f"SELECT 1 FROM pg_database WHERE datname = '{DB_NAME}'")
        exists = cursor.fetchone()
        
        if not exists:
            print(f"–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö {DB_NAME}...")
            cursor.execute(f"CREATE DATABASE {DB_NAME}")
            print(f"–ë–∞–∑–∞ –¥–∞–Ω–∏—Ö {DB_NAME} —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–∞.")
        else:
            print(f"–ë–∞–∑–∞ –¥–∞–Ω–∏—Ö {DB_NAME} –≤–∂–µ —ñ—Å–Ω—É—î.")
        
        return True
    
    except OperationalError as error:
        print("üî¥ –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ PostgreSQL!")
        print(f"–ü–æ–º–∏–ª–∫–∞: {error}")
        print("\n–ü–µ—Ä–µ–≥–ª—è–Ω—å—Ç–µ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –∑ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è PostgreSQL —É —Ñ–∞–π–ª—ñ postgres_setup.md")
        print("–¶—è –ø—Ä–æ–≥—Ä–∞–º–∞ –ø—Ä–∞—Ü—é—î –¢–Ü–õ–¨–ö–ò –∑ PostgreSQL!")
        return False
    
    finally:
        if connection:
            connection.close()

if __name__ == "__main__":
    print("=== –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ PostgreSQL ===")
    
    # –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —ñ—Å–Ω—É—é—á–æ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    if not test_connection():
        # –Ø–∫—â–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –Ω–µ–≤–¥–∞–ª–µ, —Å–ø—Ä–æ–±—É—î–º–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –±–∞–∑—É –¥–∞–Ω–∏—Ö
        print("\n–°–ø—Ä–æ–±–∞ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –±–∞–∑—É –¥–∞–Ω–∏—Ö...")
        if create_database():
            # –ü–æ–≤—Ç–æ—Ä–Ω–µ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
            print("\n–ü–æ–≤—Ç–æ—Ä–Ω–µ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è...")
            if test_connection():
                print("\n–í–∏–∫–æ–Ω–∞—Ç–∏ Django –º—ñ–≥—Ä–∞—Ü—ñ—ó? (y/n)")
                choice = input().lower()
                
                if choice == 'y':
                    print("–í–∏–∫–æ–Ω—É—î–º–æ –º—ñ–≥—Ä–∞—Ü—ñ—ó Django...")
                    os.system("python manage.py migrate")
                    print("–ú—ñ–≥—Ä–∞—Ü—ñ—ó –≤–∏–∫–æ–Ω–∞–Ω–æ.")
        else:
            print("\n–ù–ï–ú–û–ñ–õ–ò–í–û –ü–†–û–î–û–í–ñ–ò–¢–ò –ë–ï–ó POSTGRESQL!")
            sys.exit(1)
    else:
        print("\n–í–∏–∫–æ–Ω–∞—Ç–∏ Django –º—ñ–≥—Ä–∞—Ü—ñ—ó? (y/n)")
        choice = input().lower()
        
        if choice == 'y':
            print("–í–∏–∫–æ–Ω—É—î–º–æ –º—ñ–≥—Ä–∞—Ü—ñ—ó Django...")
            os.system("python manage.py migrate")
            print("–ú—ñ–≥—Ä–∞—Ü—ñ—ó –≤–∏–∫–æ–Ω–∞–Ω–æ.") 